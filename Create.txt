PRAGMA foreign_keys = ON;

CREATE TABLE OWNER (
    Email VARCHAR (30) NOT NULL,
    Fname VARCHAR (15) NOT NULL,
    Lname VARCHAR (15) NOT NULL,
    PRIMARY KEY (
        Email
    )
);

CREATE TABLE EMPLOYEE (
    EmployeeID VARCHAR (10) NOT NULL,
    Salary     REAL         NOT NULL,
    Email      VARCHAR (30) NOT NULL,
    Address    VARCHAR (30) NOT NULL,
    Fname      VARCHAR (15) NOT NULL,
    Lname      VARCHAR (15) NOT NULL,
    HiredBy    VARCHAR (15) NOT NULL,
    PRIMARY KEY (
        EmployeeID
    ),
    FOREIGN KEY (
        HiredBy
    )
    REFERENCES OWNER (Email) 
);

CREATE TABLE REGULATES (
    CardNum    INT          NOT NULL,
    EmployeeID VARCHAR (10) NOT NULL,
    PRIMARY KEY (
        CardNum
    ),
    FOREIGN KEY (
        EmployeeID
    )
    REFERENCES EMPLOYEE (EmployeeID) 
);

CREATE TABLE REGISTERS (
    PatronEmail VARCHAR (30) NOT NULL,
    EmployeeID  VARCHAR (10) NOT NULL,
    PRIMARY KEY (
        PatronEmail
    ),
    FOREIGN KEY (
        EmployeeID
    )
    REFERENCES EMPLOYEE (EmployeeID) 
);

CREATE TABLE PATRON (
    Email   VARCHAR (30) NOT NULL,
    Address VARCHAR (30) NOT NULL,
    Fname   VARCHAR (15) NOT NULL,
    Lname   VARCHAR (15) NOT NULL,
    CardNum INT          NOT NULL,
    PRIMARY KEY (
        Email
    )
);

CREATE TABLE MEDIA (
    MediaID     VARCHAR (30) NOT NULL,
    Title       VARCHAR (30) NOT NULL,
    ReleaseDate DATE         NOT NULL,
    Genre       VARCHAR (30) NOT NULL,
    PRIMARY KEY (
        MediaID
    )
);

CREATE TABLE PHYSICAL (
    PhysicalID  VARCHAR (30) NOT NULL,
    Location    VARCHAR (30) NOT NULL,
    NumofCopies INT          NOT NULL,
    PRIMARY KEY (
        PhysicalID
    ),
    FOREIGN KEY (
        PhysicalID
    )
    REFERENCES MEDIA (MediaID) 
);

CREATE TABLE DIGITAL (
    DigitalID VARCHAR (30) NOT NULL,
    License   VARCHAR (30) NOT NULL,
    PRIMARY KEY (
        DigitalID
    ),
    FOREIGN KEY (
        DigitalID
    )
    REFERENCES MEDIA (MediaID) 
);

CREATE TABLE MOVIES (
    MovieID  VARCHAR (30) NOT NULL,
    Length   TIME         NOT NULL,
    Rating   FLOAT (53)   NOT NULL,
    Actor    VARCHAR (30) NOT NULL,
    Director VARCHAR (30) NOT NULL,
    PRIMARY KEY (
        MovieID
    ),
    FOREIGN KEY (
        MovieID
    )
    REFERENCES MEDIA (MediaID),
    FOREIGN KEY (
        Actor
    )
    REFERENCES PEOPLE (PersonID) ON UPDATE CASCADE, 
    FOREIGN KEY (
        Director
    )
    REFERENCES PEOPLE (PersonID) ON UPDATE CASCADE 
);

CREATE TABLE TRACKS (
    TrackID VARCHAR (30) NOT NULL,
    Lenght  TIME         NOT NULL,
    AlbumID VARCHAR (30),
    Artist  VARCHAR (30) NOT NULL,
    PRIMARY KEY (
        TrackID
    ),
    FOREIGN KEY (
        TrackID
    )
    REFERENCES MEDIA (MediaID),
    FOREIGN KEY (
        AlbumID
    )
    REFERENCES ALBUMS (AlbumID),
    FOREIGN KEY (
        Artist
    )
    REFERENCES PEOPLE (PersonID) ON UPDATE CASCADE
);

CREATE TABLE ALBUMS (
    AlbumID VARCHAR (30) NOT NULL,
    Lenght  TIME         NOT NULL,
    PRIMARY KEY (
        AlbumID
    )
);

CREATE TABLE BOOKS (
    BookID VARCHAR (30) NOT NULL,
    Author VARCHAR (10) NOT NULL,
    PRIMARY KEY (
        BookID
    ),
    FOREIGN KEY (
        BookID
    )
    REFERENCES MEDIA (MediaID),
    FOREIGN KEY (
        Author
    )
    REFERENCES PEOPLE (PersonID) ON UPDATE CASCADE
);

CREATE TABLE PRINTED (
    PrintID    VARCHAR (30) NOT NULL,
    NumofPages INT          NOT NULL,
    PRIMARY KEY (
        PrintID
    ),
    FOREIGN KEY (
        PrintID
    )
    REFERENCES BOOKS (BookID) 
);

CREATE TABLE AUDIOBOOK (
    AudioID  VARCHAR (30) NOT NULL,
    Duration TIME         NOT NULL,
    PRIMARY KEY (
        AudioID
    ),
    FOREIGN KEY (
        AudioID
    )
    REFERENCES BOOKS (BookID) 
);

CREATE TABLE PEOPLE (
    PersonID VARCHAR (10) NOT NULL,
    Fname    VARCHAR (15) NOT NULL,
    Lname    VARCHAR (15) NOT NULL,
    Bday     DATE,
    Role     VARCHAR (15),
    PRIMARY KEY (
        PersonID
    )
);

CREATE TABLE MEDIABORROWED (
    MediaID        VARCHAR (30) NOT NULL,
    CheckedOutBy   VARCHAR (30) NOT NULL,
    DueDate        DATE         NOT NULL,
    CheckedOutDate DATE         NOT NULL,
    PRIMARY KEY (
        MediaID
    ),
    FOREIGN KEY (
        MediaID
    )
    REFERENCES MEDIA (MediaID) ,
    FOREIGN KEY (
        CheckedOutBy
    )
    REFERENCES PATRON (Email) 
);

CREATE TABLE MEDIABOUGHT (
    MediaID         VARCHAR (30) NOT NULL,
    PurchasedBy     VARCHAR (30) NOT NULL,
    CopiesPurchased INT          NOT NULL,
    ArrivalDate     DATE         NOT NULL,
    PRIMARY KEY (
        MediaID
    ),
    FOREIGN KEY (
        MediaID
    )
    REFERENCES MEDIA (MediaID),
    FOREIGN KEY (
        PurchasedBy
    )
    REFERENCES OWNER (Email) 
);
